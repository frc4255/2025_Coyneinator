// automatically generated by the FlatBuffers compiler, do not modify

package org.littletonrobotics.conduit.schema;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class CANStatus extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public CANStatus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float percentBusUtilization() { return bb.getFloat(bb_pos + 0); }
  public void mutatePercentBusUtilization(float percent_bus_utilization) { bb.putFloat(bb_pos + 0, percent_bus_utilization); }
  public long busOffCount() { return (long)bb.getInt(bb_pos + 4) & 0xFFFFFFFFL; }
  public void mutateBusOffCount(long bus_off_count) { bb.putInt(bb_pos + 4, (int) bus_off_count); }
  public long txFullCount() { return (long)bb.getInt(bb_pos + 8) & 0xFFFFFFFFL; }
  public void mutateTxFullCount(long tx_full_count) { bb.putInt(bb_pos + 8, (int) tx_full_count); }
  public long receiveErrorCount() { return (long)bb.getInt(bb_pos + 12) & 0xFFFFFFFFL; }
  public void mutateReceiveErrorCount(long receive_error_count) { bb.putInt(bb_pos + 12, (int) receive_error_count); }
  public long transmitErrorCount() { return (long)bb.getInt(bb_pos + 16) & 0xFFFFFFFFL; }
  public void mutateTransmitErrorCount(long transmit_error_count) { bb.putInt(bb_pos + 16, (int) transmit_error_count); }

  public static int createCANStatus(FlatBufferBuilder builder, float percentBusUtilization, long busOffCount, long txFullCount, long receiveErrorCount, long transmitErrorCount) {
    builder.prep(4, 20);
    builder.putInt((int) transmitErrorCount);
    builder.putInt((int) receiveErrorCount);
    builder.putInt((int) txFullCount);
    builder.putInt((int) busOffCount);
    builder.putFloat(percentBusUtilization);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public CANStatus get(int j) { return get(new CANStatus(), j); }
    public CANStatus get(CANStatus obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}

